//
// Created by Даниил Павлов on 16.09.2022.
//

#include "Intro.h"
#include <iostream>
#include <unistd.h>
#define SLEEP_TIME 500000

void Intro::start_intro(){
    char red[] = { 0x1b, '[', '3', '8',';','5',';','1','6', '0', 'm',0 };
    char white[] = { 0x1b, '[', '3', '8',';','5',';','2','3', '1', 'm',0 };
    char normal[] = { 0x1b, '[', '0', ';', '3', '9', 'm', 0 };

    std::cout << red << "  ████████▄  "<< white <<"   ▄████████  ▄█    █▄   ▄█   ▄█             "<< red <<" ▄▄▄▄███▄▄▄▄    "<< white <<"  ▄████████ ▄██   ▄        "<< red <<" ▄████████  "<< white <<"  ▄████████ ▄██   ▄             "<< red <<" ▄█    █▄   ▄█  "<< normal << '\n';
    usleep(SLEEP_TIME);
//    system("afplay Music/devil_may_cry.mp3 &");
    std::cout << red << "  ███   ▀███  "<< white <<" ███    ███ ███    ███ ███  ███            "<< red <<"▄██▀▀▀███▀▀▀██▄  "<< white <<" ███    ███ ███   ██▄      "<< red <<"███    ███ "<< white <<"  ███    ███ ███   ██▄           "<< red <<"███    ███ ███  "<< normal << '\n';
    usleep(SLEEP_TIME);
    std::cout << red << "  ███    ███  "<< white <<" ███    █▀  ███    ███ ███▌ ███           "<< red <<" ███   ███   ███ "<< white <<"  ███    ███ ███▄▄▄███      "<< red <<"███    █▀  "<< white <<"  ███    ███ ███▄▄▄███           "<< red <<"███    ███ ███▌ "<< normal << '\n';
    usleep(SLEEP_TIME);
    std::cout << red << "  ███    ███ "<< white <<" ▄███▄▄▄     ███    ███ ███▌ ███            "<< red <<"███   ███   ███ "<< white <<"  ███    ███ ▀▀▀▀▀▀███      "<< red <<"███       "<< white <<"  ▄███▄▄▄▄██▀ ▀▀▀▀▀▀███           "<< red <<"███    ███ ███▌ "<< normal << '\n';
    usleep(SLEEP_TIME);
    std::cout << red << "  ███    ███ "<< white <<"▀▀███▀▀▀     ███    ███ ███▌ ███            "<< red <<"███   ███   ███ "<< white <<"▀███████████ ▄██   ███      "<< red <<"███       "<< white <<" ▀▀███▀▀▀▀▀   ▄██   ███           "<< red <<"███    ███ ███▌ "<< normal << '\n';
    usleep(SLEEP_TIME);
    std::cout << red << "  ███    ███ "<< white <<"  ███    █▄  ███    ███ ███  ███            "<< red <<"███   ███   ███  "<< white <<" ███    ███ ███   ███      "<< red <<"███    █▄ "<< white <<" ▀███████████ ███   ███           "<< red <<"███    ███ ███  "<< normal << '\n';
    usleep(SLEEP_TIME);

    std::cout << red << "  ███   ▄███ "<< white <<"  ███    ███ ███    ███ ███  ███▌    ▄      "<< red <<"███   ███   ███ "<< white <<"  ███    ███ ███   ███      "<< red <<"███    ███ "<< white <<"  ███    ███ ███   ███           "<< red <<"███    ███ ███  "<< normal << '\n';
    usleep(SLEEP_TIME);
    std::cout << red << "  ████████▀  "<< white <<"  ██████████  ▀██████▀  █▀   █████▄▄██       "<< red <<"▀█   ███   █▀  "<< white <<"  ███    █▀   ▀█████▀       "<< red <<"████████▀  "<< white <<"  ███    ███  ▀█████▀            "<< red <<" ▀██████▀  █▀   "<< normal << '\n';
    usleep(SLEEP_TIME);
    std::cout << red << "             "<< white <<"                             ▀                  "<< red <<"            "<< white <<"                                       "<< red <<" "<< white <<" ███    ███                         "<< red <<"            "<< normal << '\n';
    usleep(SLEEP_TIME);
//    system("killall afplay");

}

void Intro::cout_intro() {
    char red[] = { 0x1b, '[', '3', '8',';','5',';','1','6', '0', 'm',0 };
    char white[] = { 0x1b, '[', '3', '8',';','5',';','2','3', '1', 'm',0 };
    char normal[] = { 0x1b, '[', '0', ';', '3', '9', 'm', 0 };


    std::cout << red << "  ████████▄  "<< white <<"   ▄████████  ▄█    █▄   ▄█   ▄█             "<< red <<" ▄▄▄▄███▄▄▄▄    "<< white <<"  ▄████████ ▄██   ▄        "<< red <<" ▄████████  "<< white <<"  ▄████████ ▄██   ▄             "<< red <<" ▄█    █▄   ▄█  "<< normal << '\n';
    std::cout << red << "  ███   ▀███  "<< white <<" ███    ███ ███    ███ ███  ███            "<< red <<"▄██▀▀▀███▀▀▀██▄  "<< white <<" ███    ███ ███   ██▄      "<< red <<"███    ███ "<< white <<"  ███    ███ ███   ██▄           "<< red <<"███    ███ ███  "<< normal << '\n';
    std::cout << red << "  ███    ███  "<< white <<" ███    █▀  ███    ███ ███▌ ███           "<< red <<" ███   ███   ███ "<< white <<"  ███    ███ ███▄▄▄███      "<< red <<"███    █▀  "<< white <<"  ███    ███ ███▄▄▄███           "<< red <<"███    ███ ███▌ "<< normal << '\n';
    std::cout << red << "  ███    ███ "<< white <<" ▄███▄▄▄     ███    ███ ███▌ ███            "<< red <<"███   ███   ███ "<< white <<"  ███    ███ ▀▀▀▀▀▀███      "<< red <<"███       "<< white <<"  ▄███▄▄▄▄██▀ ▀▀▀▀▀▀███           "<< red <<"███    ███ ███▌ "<< normal << '\n';
    std::cout << red << "  ███    ███ "<< white <<"▀▀███▀▀▀     ███    ███ ███▌ ███            "<< red <<"███   ███   ███ "<< white <<"▀███████████ ▄██   ███      "<< red <<"███       "<< white <<" ▀▀███▀▀▀▀▀   ▄██   ███           "<< red <<"███    ███ ███▌ "<< normal << '\n';
    std::cout << red << "  ███    ███ "<< white <<"  ███    █▄  ███    ███ ███  ███            "<< red <<"███   ███   ███  "<< white <<" ███    ███ ███   ███      "<< red <<"███    █▄ "<< white <<" ▀███████████ ███   ███           "<< red <<"███    ███ ███  "<< normal << '\n';
    std::cout << red << "  ███   ▄███ "<< white <<"  ███    ███ ███    ███ ███  ███▌    ▄      "<< red <<"███   ███   ███ "<< white <<"  ███    ███ ███   ███      "<< red <<"███    ███ "<< white <<"  ███    ███ ███   ███           "<< red <<"███    ███ ███  "<< normal << '\n';
    std::cout << red << "  ████████▀  "<< white <<"  ██████████  ▀██████▀  █▀   █████▄▄██       "<< red <<"▀█   ███   █▀  "<< white <<"  ███    █▀   ▀█████▀       "<< red <<"████████▀  "<< white <<"  ███    ███  ▀█████▀            "<< red <<" ▀██████▀  █▀   "<< normal << '\n';
    std::cout << red << "             "<< white <<"                             ▀                  "<< red <<"            "<< white <<"                                       "<< red <<" "<< white <<" ███    ███                         "<< red <<"            "<< normal << '\n';
}


